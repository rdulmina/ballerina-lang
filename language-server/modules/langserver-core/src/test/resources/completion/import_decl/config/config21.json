{
  "position": {
    "line": 5,
    "character": 5
  },
  "source": "import_decl/source/lsproject/modules/module3/main8.bal",
  "items": [
    {
      "label": "xmlns",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "O",
      "insertText": "xmlns \"${1}\" as ${2:ns};",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "xmlns",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "P",
      "insertText": "xmlns ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "var",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "P",
      "insertText": "var ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "wait",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "P",
      "insertText": "wait ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "start",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "P",
      "insertText": "start ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "flush",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "P",
      "insertText": "flush ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "isolated",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "P",
      "insertText": "isolated ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "transactional",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "P",
      "insertText": "transactional",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "checkpanic",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "P",
      "insertText": "checkpanic ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "check",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "P",
      "insertText": "check ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "final",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "P",
      "insertText": "final ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "fail",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "P",
      "insertText": "fail ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "if",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "O",
      "insertText": "if ${1:true} {\n\t${2}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "while",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "O",
      "insertText": "while ${1:true} {\n\t${2}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "do",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "O",
      "insertText": "do {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "lock",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "O",
      "insertText": "lock {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "foreach",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "O",
      "insertText": "foreach ${1:var} ${2:item} in ${3:itemList} {\n\t${4}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "fork",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "O",
      "insertText": "fork {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "transaction",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "O",
      "insertText": "transaction {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "retry",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "O",
      "insertText": "retry {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "retry transaction",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "O",
      "insertText": "retry transaction {\n\t${1}\n}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "match",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "O",
      "insertText": "match ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "return",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "O",
      "insertText": "return ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "panic",
      "kind": "Snippet",
      "detail": "Statement",
      "sortText": "O",
      "insertText": "panic ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "stream<> streamName = new;",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "O",
      "insertText": "stream<${1}> ${2:streamName} = new;",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "module1",
      "kind": "Module",
      "detail": "Module",
      "sortText": "N",
      "insertText": "module1",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "ballerina/lang.test",
      "kind": "Module",
      "detail": "Module",
      "sortText": "Q",
      "insertText": "test",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.test;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.array",
      "kind": "Module",
      "detail": "Module",
      "sortText": "Q",
      "insertText": "array",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.array;\n"
        }
      ]
    },
    {
      "label": "ballerina/jballerina.java",
      "kind": "Module",
      "detail": "Module",
      "sortText": "Q",
      "insertText": "java",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import ballerina/jballerina.java;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.value",
      "kind": "Module",
      "detail": "Module",
      "sortText": "Q",
      "insertText": "value",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.value;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.query",
      "kind": "Module",
      "detail": "Module",
      "sortText": "Q",
      "insertText": "query",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.query;\n"
        }
      ]
    },
    {
      "label": "ballerina/lang.runtime",
      "kind": "Module",
      "detail": "Module",
      "sortText": "Q",
      "insertText": "runtime",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import ballerina/lang.runtime;\n"
        }
      ]
    },
    {
      "label": "boolean",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "boolean",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "decimal",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "decimal",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "error",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "error",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "float",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "float",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "future",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "future",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "int",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "int",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "map",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "map",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "object",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "object",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "stream",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "stream",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "string",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "string",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "table",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "table",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "transaction",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "transaction",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "typedesc",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "typedesc",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "xml",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "xml",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "lsproject.hierarchy.module4",
      "kind": "Module",
      "detail": "Module",
      "sortText": "Q",
      "insertText": "module4",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import lsproject.hierarchy.module4;\n"
        }
      ]
    },
    {
      "label": "lsproject.module2",
      "kind": "Module",
      "detail": "Module",
      "sortText": "Q",
      "insertText": "module2",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import lsproject.module2;\n"
        }
      ]
    },
    {
      "label": "lsproject.module1",
      "kind": "Module",
      "detail": "Module",
      "sortText": "Q",
      "insertText": "module11",
      "insertTextFormat": "Snippet",
      "additionalTextEdits": [
        {
          "range": {
            "start": {
              "line": 2,
              "character": 0
            },
            "end": {
              "line": 2,
              "character": 0
            }
          },
          "newText": "import lsproject.module1 as module11 ;\n"
        }
      ]
    },
    {
      "label": "StrandData",
      "kind": "Struct",
      "detail": "Record",
      "documentation": {
        "left": "Describes Strand execution details for the runtime.\n"
      },
      "sortText": "L",
      "insertText": "StrandData",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "Thread",
      "kind": "TypeParameter",
      "detail": "Union",
      "sortText": "M",
      "insertText": "Thread",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "readonly",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "readonly",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "handle",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "handle",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "never",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "never",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "json",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "json",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "anydata",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "anydata",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "any",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "any",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "byte",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "byte",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "service",
      "kind": "Unit",
      "detail": "type",
      "sortText": "Q",
      "insertText": "service",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "record",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "P",
      "insertText": "record ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "function",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "P",
      "insertText": "function ",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "record {}",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "O",
      "insertText": "record {${1}}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "record {||}",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "O",
      "insertText": "record {|${1}|}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "distinct",
      "kind": "Keyword",
      "detail": "Keyword",
      "sortText": "P",
      "insertText": "distinct",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "object {}",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "O",
      "insertText": "object {${1}}",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "testFunction()",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ballerinals/lsproject.module3:0.1.0_  \n  \n  \n"
        }
      },
      "sortText": "C",
      "insertText": "testFunction()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "testFunction4()",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ballerinals/lsproject.module3:0.1.0_  \n  \n  \n"
        }
      },
      "sortText": "C",
      "insertText": "testFunction4()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "testImports()",
      "kind": "Function",
      "detail": "Function",
      "documentation": {
        "right": {
          "kind": "markdown",
          "value": "**Package:** _ballerinals/lsproject.module3:0.1.0_  \n  \n  \n"
        }
      },
      "sortText": "C",
      "insertText": "testImports()",
      "insertTextFormat": "Snippet"
    },
    {
      "label": "worker",
      "kind": "Snippet",
      "detail": "Snippet",
      "sortText": "O",
      "insertText": "worker ${1:name} {\n\t${2}\n}",
      "insertTextFormat": "Snippet"
    }
  ]
}
